(function(a, b) {
  'object' == typeof exports && 'undefined' != typeof module
    ? (module.exports = b())
    : 'function' == typeof define && define.amd ? define(b) : (a.retinajs = b());
})(this, function() {
  'use strict';
  function a(a) {
    return Array.prototype.slice.call(a);
  }
  function b(a) {
    var b = parseInt(a, 10);
    return l < b ? l : b;
  }
  function c(a) {
    return (
      a.hasAttribute('data-no-resize') ||
        (0 === a.offsetWidth && 0 === a.offsetHeight
          ? (a.setAttribute('width', a.naturalWidth), a.setAttribute('height', a.naturalHeight))
          : (a.setAttribute('width', a.offsetWidth), a.setAttribute('height', a.offsetHeight))),
      a
    );
  }
  function d(a, b) {
    var d = a.nodeName.toLowerCase(),
      e = document.createElement('img');
    e.addEventListener('load', function() {
      'img' === d ? c(a).setAttribute('src', b) : (a.style.backgroundImage = 'url(' + b + ')');
    }),
      e.setAttribute('src', b),
      a.setAttribute(p, !0);
  }
  function e(a, c) {
    var e = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1,
      f = b(e);
    if (c && 1 < f) {
      var g = c.replace(m, '@' + f + 'x$1');
      d(a, g);
    }
  }
  function f(a, b, c) {
    var e = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : 1;
    l > e && d(a, c);
  }
  function g(b) {
    return b
      ? 'function' == typeof b.forEach ? b : a(b)
      : 'undefined' == typeof document ? [] : a(document.querySelectorAll(o));
  }
  function h(a) {
    return a.style.backgroundImage.replace(n, '$2');
  }
  function i(a) {
    g(a).forEach(function(a) {
      if (!a.getAttribute(p)) {
        var b = 'img' === a.nodeName.toLowerCase(),
          c = b ? a.getAttribute('src') : h(a),
          d = a.getAttribute('data-rjs'),
          g = !isNaN(parseInt(d, 10)),
          i = !1;
        if (!g)
          try {
            var k = JSON.parse(d);
            'object' === ('undefined' == typeof k ? 'undefined' : j(k)) && ((i = !0), (d = k));
          } catch (a) {
            i = !1;
          }
        if (null === d) return;
        g
          ? e(a, c, d)
          : i
            ? (Object.keys(d).forEach(function(b) {
                f(a, c, d[b], b);
              }),
              f(a, c, d))
            : f(a, c, d);
      }
    });
  }
  var j =
      'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
        ? function(a) {
            return typeof a;
          }
        : function(a) {
            return a &&
              'function' == typeof Symbol &&
              a.constructor === Symbol &&
              a !== Symbol.prototype
              ? 'symbol'
              : typeof a;
          },
    k = 'undefined' != typeof window,
    l = Math.round(k ? window.devicePixelRatio || 1 : 1),
    m = /(\.[A-z]{3,4}\/?(\?.*)?)$/,
    n = /url\(('|")?([^)'"]+)('|")?\)/i,
    o = '[data-rjs]',
    p = 'data-rjs-processed';
  return (
    k &&
      (window.addEventListener('load', function() {
        i();
      }),
      (window.retinajs = i)),
    i
  );
});
//# sourceMappingURL=retina.min.js.map
